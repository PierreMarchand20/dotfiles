language: minimal

services:
  - docker

# Compiler selection
matrix:
  include:
    # Tests on osx
    - os: osx
      install: 
        - brew update
        - brew install yadm
        - brew unlink python@2

    - os: linux
      dist: xenial
      group: travis_latest
      name: "Ubuntu"
      env: TESTING_ENV=ubuntu_mpich

    - os: linux
      dist: xenial
      group: travis_latest
      name: "Debian"
      env: TESTING_ENV=debian_mpich



install: 
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker pull pierremarchand/htool_testing_environments:${TESTING_ENV}; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker run -itd --name ${TESTING_ENV} pierremarchand/htool_testing_environments:${TESTING_ENV}; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker exec -it ${TESTING_ENV} bash -c 'apt-get update'; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker exec -it ${TESTING_ENV} bash -c 'apt install curl'; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker exec -it ${TESTING_ENV} bash -c 'curl -fLo /usr/local/bin/yadm https://github.com/TheLocehiliosan/yadm/raw/master/yadm && chmod a+x /usr/local/bin/yadm'; fi
  

script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker exec -it ${TESTING_ENV} bash -c 'yadm clone --bootstrap https://github.com/PierreMarchand20/dotfiles.git'; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker exec -it ${TESTING_ENV} bash -c 'yadm bootstrap'; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then yadm clone --bootstrap https://github.com/PierreMarchand20/dotfiles.git; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then yadm bootstrap; fi #to test idempotence