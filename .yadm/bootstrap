#!/bin/bash

set -e
# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
cd "$HOME"
echo "Init submodules"
yadm submodule update --recursive --init

# Check for Homebrew
if test ! $(which brew)
then
    echo "  Installing Homebrew for you."

    # Install the correct homebrew for each OS type
    if test "$(uname)" = "Darwin"
    then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    elif test "$(expr substr $(uname -s) 1 5)" = "Linux"
    then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"
    fi

fi

# Install everything in Brewfiles
if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global --verbose
fi


# Sensible macOS defaults 
if test "$(uname)" = "Darwin"
then
    echo "Applying preferences for macos"
    ./.macos
fi

# Setup git
git config --global user.name 'Pierre Marchand'

git config --global core.editor 'code --wait'

git config --global merge.tool "vscode"
git config --global diff.tool "vscode"

git config --global mergetool.cmd 'code --wait $MERGED'
git config --global difftool.cmd 'code --wait --diff $LOCAL $REMOTE'

# Partage folder
mkdir Partage
cd Partage

## Metropolis beamer style
git clone https://github.com/matze/mtheme.git
cd mtheme
make sty & make install
cd ..

## Personal webpage
git clone git@github.com:PierreMarchand20/personal_webpage.git

exit 0
